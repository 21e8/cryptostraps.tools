{"version":3,"file":"Mint.mjs","sources":["../../../../src/plugins/tokenModule/Mint.ts"],"sourcesContent":["import type { PublicKey } from '@solana/web3.js';\nimport { amount, Amount, Currency, SOL } from '@/types';\nimport { assert, Option } from '@/utils';\nimport { MintAccount } from './accounts';\nimport { WRAPPED_SOL_MINT } from './constants';\n\nexport type Mint = Readonly<{\n  model: 'mint';\n  address: PublicKey;\n  mintAuthorityAddress: Option<PublicKey>;\n  freezeAuthorityAddress: Option<PublicKey>;\n  decimals: number;\n  supply: Amount;\n  isWrappedSol: boolean;\n  currency: Currency;\n}>;\n\nexport const isMint = (value: any): value is Mint =>\n  typeof value === 'object' && value.model === 'mint';\n\nexport const assertMint = (value: any): asserts value is Mint =>\n  assert(isMint(value), `Expected Mint model`);\n\nexport const toMint = (account: MintAccount): Mint => {\n  const isWrappedSol = account.publicKey.equals(WRAPPED_SOL_MINT);\n  const currency: Currency = isWrappedSol\n    ? SOL\n    : {\n        symbol: 'Token',\n        decimals: account.data.decimals,\n        namespace: 'spl-token',\n      };\n\n  return {\n    model: 'mint',\n    address: account.publicKey,\n    mintAuthorityAddress: account.data.mintAuthorityOption\n      ? account.data.mintAuthority\n      : null,\n    freezeAuthorityAddress: account.data.freezeAuthorityOption\n      ? account.data.freezeAuthority\n      : null,\n    decimals: account.data.decimals,\n    supply: amount(account.data.supply.toString(), currency),\n    isWrappedSol,\n    currency,\n  };\n};\n"],"names":["isMint","value","model","assertMint","assert","toMint","account","isWrappedSol","publicKey","equals","WRAPPED_SOL_MINT","currency","SOL","symbol","decimals","data","namespace","address","mintAuthorityAddress","mintAuthorityOption","mintAuthority","freezeAuthorityAddress","freezeAuthorityOption","freezeAuthority","supply","amount","toString"],"mappings":";;;;AAiBaA,MAAAA,MAAM,GAAIC,KAAD,IACpB,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,KAAN,KAAgB,OADxC;AAGMC,MAAAA,UAAU,GAAIF,KAAD,IACxBG,MAAM,CAACJ,MAAM,CAACC,KAAD,CAAP,EAAiB,qBAAjB,EADD;AAGMI,MAAAA,MAAM,GAAIC,OAAD,IAAgC;EACpD,MAAMC,YAAY,GAAGD,OAAO,CAACE,SAAR,CAAkBC,MAAlB,CAAyBC,gBAAzB,CAArB,CAAA;AACA,EAAA,MAAMC,QAAkB,GAAGJ,YAAY,GACnCK,GADmC,GAEnC;AACEC,IAAAA,MAAM,EAAE,OADV;AAEEC,IAAAA,QAAQ,EAAER,OAAO,CAACS,IAAR,CAAaD,QAFzB;AAGEE,IAAAA,SAAS,EAAE,WAAA;GALjB,CAAA;EAQA,OAAO;AACLd,IAAAA,KAAK,EAAE,MADF;IAELe,OAAO,EAAEX,OAAO,CAACE,SAFZ;AAGLU,IAAAA,oBAAoB,EAAEZ,OAAO,CAACS,IAAR,CAAaI,mBAAb,GAClBb,OAAO,CAACS,IAAR,CAAaK,aADK,GAElB,IALC;AAMLC,IAAAA,sBAAsB,EAAEf,OAAO,CAACS,IAAR,CAAaO,qBAAb,GACpBhB,OAAO,CAACS,IAAR,CAAaQ,eADO,GAEpB,IARC;AASLT,IAAAA,QAAQ,EAAER,OAAO,CAACS,IAAR,CAAaD,QATlB;AAULU,IAAAA,MAAM,EAAEC,MAAM,CAACnB,OAAO,CAACS,IAAR,CAAaS,MAAb,CAAoBE,QAApB,EAAD,EAAiCf,QAAjC,CAVT;IAWLJ,YAXK;AAYLI,IAAAA,QAAAA;GAZF,CAAA;AAcD;;;;"}