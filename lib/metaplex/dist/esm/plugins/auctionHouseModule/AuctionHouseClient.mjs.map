{"version":3,"file":"AuctionHouseClient.mjs","sources":["../../../../src/plugins/auctionHouseModule/AuctionHouseClient.ts"],"sourcesContent":["import { Metaplex } from '@/Metaplex';\nimport { Signer, toDateTime } from '@/types';\nimport { Task } from '@/utils';\nimport { Commitment, PublicKey } from '@solana/web3.js';\nimport { AuctionHouse } from './AuctionHouse';\nimport {\n  CreateListingInput,\n  createListingOperation,\n  CreateListingOutput,\n} from './createListing';\nimport { findListingByAddressOperation } from './findListingByAddress';\nimport { LazyListing, Listing } from './Listing';\nimport { loadListingOperation } from './loadListing';\n\ntype WithoutAH<T> = Omit<T, 'auctionHouse' | 'auctioneerAuthority'>;\n\nexport class AuctionHouseClient {\n  constructor(\n    protected readonly metaplex: Metaplex,\n    protected readonly auctionHouse: AuctionHouse,\n    protected readonly auctioneerAuthority?: Signer\n  ) {}\n\n  list(\n    input: WithoutAH<CreateListingInput>\n  ): Task<CreateListingOutput & { listing: Listing }> {\n    return new Task(async (scope) => {\n      const output = await this.metaplex\n        .operations()\n        .execute(createListingOperation(this.addAH(input)), scope);\n      scope.throwIfCanceled();\n\n      try {\n        const listing = await this.findListingByAddress(\n          output.sellerTradeState\n        ).run(scope);\n        return { listing, ...output };\n      } catch (error) {\n        // Fallback to manually creating a listing from inputs and outputs.\n      }\n\n      scope.throwIfCanceled();\n      const lazyListing: LazyListing = {\n        model: 'listing',\n        lazy: true,\n        auctionHouse: this.auctionHouse,\n        tradeStateAddress: output.sellerTradeState,\n        bookkeeperAddress: input.printReceipt ? output.bookkeeper : null,\n        sellerAddress: output.wallet,\n        metadataAddress: output.metadata,\n        receiptAddress: input.printReceipt ? output.receipt : null,\n        purchaseReceiptAddress: null,\n        price: output.price,\n        tokens: output.tokens.basisPoints,\n        createdAt: toDateTime(new Date()),\n        canceledAt: null,\n      };\n\n      return {\n        listing: await this.loadListing(lazyListing).run(scope),\n        ...output,\n      };\n    });\n  }\n\n  findListingByAddress(\n    address: PublicKey,\n    options: { commitment?: Commitment; loadJsonMetadata?: boolean } = {}\n  ) {\n    return this.metaplex.operations().getTask(\n      findListingByAddressOperation({\n        address,\n        auctionHouse: this.auctionHouse,\n        ...options,\n      })\n    );\n  }\n\n  loadListing(\n    lazyListing: LazyListing,\n    options: { commitment?: Commitment; loadJsonMetadata?: boolean } = {}\n  ): Task<Listing> {\n    return this.metaplex\n      .operations()\n      .getTask(loadListingOperation({ lazyListing, ...options }));\n  }\n\n  protected addAH<T>(input: WithoutAH<T>): T {\n    return {\n      auctionHouse: this.auctionHouse,\n      auctioneerAuthority: this.auctioneerAuthority,\n      ...input,\n    } as unknown as T;\n  }\n}\n"],"names":["AuctionHouseClient","constructor","metaplex","auctionHouse","auctioneerAuthority","list","input","Task","scope","output","operations","execute","createListingOperation","addAH","throwIfCanceled","listing","findListingByAddress","sellerTradeState","run","error","lazyListing","model","lazy","tradeStateAddress","bookkeeperAddress","printReceipt","bookkeeper","sellerAddress","wallet","metadataAddress","metadata","receiptAddress","receipt","purchaseReceiptAddress","price","tokens","basisPoints","createdAt","toDateTime","Date","canceledAt","loadListing","address","options","getTask","findListingByAddressOperation","loadListingOperation"],"mappings":"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"}