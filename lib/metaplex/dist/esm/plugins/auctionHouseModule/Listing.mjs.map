{"version":3,"file":"Listing.mjs","sources":["../../../../src/plugins/auctionHouseModule/Listing.ts"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport {\n  amount,\n  Amount,\n  BigNumber,\n  DateTime,\n  Pda,\n  toBigNumber,\n  toDateTime,\n  toOptionDateTime,\n} from '@/types';\nimport { ListingReceiptAccount } from './accounts';\nimport { TokenWithMetadata } from '../nftModule';\nimport { assert, Option } from '@/utils';\nimport { AuctionHouse } from './AuctionHouse';\n\nexport type Listing = Readonly<{\n  model: 'listing';\n  lazy: false;\n\n  // Models.\n  auctionHouse: AuctionHouse;\n  token: TokenWithMetadata;\n\n  // Addresses.\n  tradeStateAddress: Pda;\n  sellerAddress: PublicKey;\n  bookkeeperAddress: Option<PublicKey>;\n  receiptAddress: Option<Pda>;\n  purchaseReceiptAddress: Option<PublicKey>;\n\n  // Data.\n  price: Amount;\n  tokens: Amount;\n  createdAt: DateTime;\n  canceledAt: Option<DateTime>;\n}>;\n\nexport const isListing = (value: any): value is Listing =>\n  typeof value === 'object' && value.model === 'listing' && !value.lazy;\n\nexport const assertListing = (value: any): asserts value is Listing =>\n  assert(isListing(value), `Expected Listing type`);\n\nexport const toListing = (\n  account: ListingReceiptAccount,\n  auctionHouseModel: AuctionHouse,\n  tokenModel: TokenWithMetadata\n): Listing => {\n  const lazyListing = toLazyListing(account, auctionHouseModel);\n  return {\n    ...lazyListing,\n    model: 'listing',\n    lazy: false,\n    token: tokenModel,\n    tokens: amount(lazyListing.tokens, tokenModel.mint.currency),\n  };\n};\n\nexport type LazyListing = Omit<Listing, 'model' | 'lazy' | 'token' | 'tokens'> &\n  Readonly<{\n    model: 'listing';\n    lazy: true;\n    metadataAddress: PublicKey;\n    tokens: BigNumber;\n  }>;\n\nexport const isLazyListing = (value: any): value is LazyListing =>\n  typeof value === 'object' && value.model === 'listing' && value.lazy;\n\nexport const assertLazyListing = (value: any): asserts value is LazyListing =>\n  assert(isLazyListing(value), `Expected LazyListing type`);\n\nexport const toLazyListing = (\n  account: ListingReceiptAccount,\n  auctionHouseModel: AuctionHouse\n): LazyListing => {\n  return {\n    model: 'listing',\n    lazy: true,\n    auctionHouse: auctionHouseModel,\n    tradeStateAddress: new Pda(\n      account.data.tradeState,\n      account.data.tradeStateBump\n    ),\n    bookkeeperAddress: account.data.bookkeeper,\n    sellerAddress: account.data.seller,\n    metadataAddress: account.data.metadata,\n    receiptAddress: new Pda(\n      account.data.tradeState,\n      account.data.tradeStateBump\n    ),\n    purchaseReceiptAddress: account.data.purchaseReceipt,\n\n    // Data.\n    price: amount(account.data.price, auctionHouseModel.treasuryMint.currency),\n    tokens: toBigNumber(account.data.tokenSize),\n    createdAt: toDateTime(account.data.createdAt),\n    canceledAt: toOptionDateTime(account.data.canceledAt),\n  };\n};\n"],"names":["isListing","value","model","lazy","assertListing","assert","toListing","account","auctionHouseModel","tokenModel","lazyListing","toLazyListing","token","tokens","amount","mint","currency","isLazyListing","assertLazyListing","auctionHouse","tradeStateAddress","Pda","data","tradeState","tradeStateBump","bookkeeperAddress","bookkeeper","sellerAddress","seller","metadataAddress","metadata","receiptAddress","purchaseReceiptAddress","purchaseReceipt","price","treasuryMint","toBigNumber","tokenSize","createdAt","toDateTime","canceledAt","toOptionDateTime"],"mappings":";;;;;;MAsCaA,SAAS,GAAIC,KAAD,IACvB,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,KAAN,KAAgB,SAA7C,IAA0D,CAACD,KAAK,CAACE,KAD5D;AAGMC,MAAAA,aAAa,GAAIH,KAAD,IAC3BI,MAAM,CAACL,SAAS,CAACC,KAAD,CAAV,EAAoB,uBAApB,EADD;AAGA,MAAMK,SAAS,GAAG,CACvBC,OADuB,EAEvBC,iBAFuB,EAGvBC,UAHuB,KAIX;AACZ,EAAA,MAAMC,WAAW,GAAGC,aAAa,CAACJ,OAAD,EAAUC,iBAAV,CAAjC,CAAA;EACA,OAAO,EACL,GAAGE,WADE;AAELR,IAAAA,KAAK,EAAE,SAFF;AAGLC,IAAAA,IAAI,EAAE,KAHD;AAILS,IAAAA,KAAK,EAAEH,UAJF;IAKLI,MAAM,EAAEC,MAAM,CAACJ,WAAW,CAACG,MAAb,EAAqBJ,UAAU,CAACM,IAAX,CAAgBC,QAArC,CAAA;GALhB,CAAA;AAOD,EAbM;MAuBMC,aAAa,GAAIhB,KAAD,IAC3B,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,KAAN,KAAgB,SAA7C,IAA0DD,KAAK,CAACE,KAD3D;AAGMe,MAAAA,iBAAiB,GAAIjB,KAAD,IAC/BI,MAAM,CAACY,aAAa,CAAChB,KAAD,CAAd,EAAwB,2BAAxB,EADD;MAGMU,aAAa,GAAG,CAC3BJ,OAD2B,EAE3BC,iBAF2B,KAGX;EAChB,OAAO;AACLN,IAAAA,KAAK,EAAE,SADF;AAELC,IAAAA,IAAI,EAAE,IAFD;AAGLgB,IAAAA,YAAY,EAAEX,iBAHT;AAILY,IAAAA,iBAAiB,EAAE,IAAIC,GAAJ,CACjBd,OAAO,CAACe,IAAR,CAAaC,UADI,EAEjBhB,OAAO,CAACe,IAAR,CAAaE,cAFI,CAJd;AAQLC,IAAAA,iBAAiB,EAAElB,OAAO,CAACe,IAAR,CAAaI,UAR3B;AASLC,IAAAA,aAAa,EAAEpB,OAAO,CAACe,IAAR,CAAaM,MATvB;AAULC,IAAAA,eAAe,EAAEtB,OAAO,CAACe,IAAR,CAAaQ,QAVzB;AAWLC,IAAAA,cAAc,EAAE,IAAIV,GAAJ,CACdd,OAAO,CAACe,IAAR,CAAaC,UADC,EAEdhB,OAAO,CAACe,IAAR,CAAaE,cAFC,CAXX;AAeLQ,IAAAA,sBAAsB,EAAEzB,OAAO,CAACe,IAAR,CAAaW,eAfhC;AAiBL;AACAC,IAAAA,KAAK,EAAEpB,MAAM,CAACP,OAAO,CAACe,IAAR,CAAaY,KAAd,EAAqB1B,iBAAiB,CAAC2B,YAAlB,CAA+BnB,QAApD,CAlBR;IAmBLH,MAAM,EAAEuB,WAAW,CAAC7B,OAAO,CAACe,IAAR,CAAae,SAAd,CAnBd;IAoBLC,SAAS,EAAEC,UAAU,CAAChC,OAAO,CAACe,IAAR,CAAagB,SAAd,CApBhB;AAqBLE,IAAAA,UAAU,EAAEC,gBAAgB,CAAClC,OAAO,CAACe,IAAR,CAAakB,UAAd,CAAA;GArB9B,CAAA;AAuBD;;;;"}