{"version":3,"file":"findTokenWithMetadataByMetadata.mjs","sources":["../../../../src/plugins/nftModule/findTokenWithMetadataByMetadata.ts"],"sourcesContent":["import type { Commitment, PublicKey } from '@solana/web3.js';\nimport { Metaplex } from '@/Metaplex';\nimport { Operation, useOperation, OperationHandler } from '@/types';\nimport { toMetadata, toTokenWithMetadata, TokenWithMetadata } from './Metadata';\nimport {\n  toMint,\n  toMintAccount,\n  toTokenAccount,\n  findAssociatedTokenAccountPda,\n} from '../tokenModule';\nimport { toMetadataAccount } from '@/programs';\nimport { DisposableScope } from '@/utils';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindTokenWithMetadataByMetadataOperation' as const;\nexport const findTokenWithMetadataByMetadataOperation =\n  useOperation<FindTokenWithMetadataByMetadataOperation>(Key);\nexport type FindTokenWithMetadataByMetadataOperation = Operation<\n  typeof Key,\n  FindTokenWithMetadataByMetadataInput,\n  TokenWithMetadata\n>;\n\nexport type FindTokenWithMetadataByMetadataInput = {\n  metadataAddress: PublicKey;\n  ownerAddress: PublicKey;\n  commitment?: Commitment;\n  loadJsonMetadata?: boolean; // Default: true\n};\n\n// -----------------\n// Handler\n// -----------------\n\nexport const findTokenWithMetadataByMetadataOperationHandler: OperationHandler<FindTokenWithMetadataByMetadataOperation> =\n  {\n    handle: async (\n      operation: FindTokenWithMetadataByMetadataOperation,\n      metaplex: Metaplex,\n      scope: DisposableScope\n    ): Promise<TokenWithMetadata> => {\n      const {\n        metadataAddress,\n        ownerAddress,\n        commitment,\n        loadJsonMetadata = true,\n      } = operation.input;\n\n      const metadataAccount = toMetadataAccount(\n        await metaplex.rpc().getAccount(metadataAddress)\n      );\n\n      const mintAddress = metadataAccount.data.mint;\n      const tokenAddress = findAssociatedTokenAccountPda(\n        mintAddress,\n        ownerAddress\n      );\n      const accounts = await metaplex\n        .rpc()\n        .getMultipleAccounts([mintAddress, tokenAddress], commitment);\n\n      const mintAccount = toMintAccount(accounts[0]);\n      const tokenAccount = toTokenAccount(accounts[1]);\n      const mintModel = toMint(mintAccount);\n\n      let metadataModel = toMetadata(metadataAccount);\n      if (loadJsonMetadata) {\n        metadataModel = await metaplex\n          .nfts()\n          .loadJsonMetadata(metadataModel)\n          .run(scope);\n      }\n\n      return toTokenWithMetadata(tokenAccount, mintModel, metadataModel);\n    },\n  };\n"],"names":["Key","findTokenWithMetadataByMetadataOperation","useOperation","findTokenWithMetadataByMetadataOperationHandler","handle","operation","metaplex","scope","metadataAddress","ownerAddress","commitment","loadJsonMetadata","input","metadataAccount","toMetadataAccount","rpc","getAccount","mintAddress","data","mint","tokenAddress","findAssociatedTokenAccountPda","accounts","getMultipleAccounts","mintAccount","toMintAccount","tokenAccount","toTokenAccount","mintModel","toMint","metadataModel","toMetadata","nfts","run","toTokenWithMetadata"],"mappings":";;;;;;;AAaA;AACA;AACA;AAEA,MAAMA,GAAG,GAAG,0CAAZ,CAAA;MACaC,wCAAwC,GACnDC,YAAY,CAA2CF,GAA3C,EADP;AAeP;AACA;AACA;AAEO,MAAMG,+CAA2G,GACtH;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIyB;IAC/B,MAAM;MACJC,eADI;MAEJC,YAFI;MAGJC,UAHI;AAIJC,MAAAA,gBAAgB,GAAG,IAAA;KACjBN,GAAAA,SAAS,CAACO,KALd,CAAA;AAOA,IAAA,MAAMC,eAAe,GAAGC,iBAAiB,CACvC,MAAMR,QAAQ,CAACS,GAAT,EAAeC,CAAAA,UAAf,CAA0BR,eAA1B,CADiC,CAAzC,CAAA;AAIA,IAAA,MAAMS,WAAW,GAAGJ,eAAe,CAACK,IAAhB,CAAqBC,IAAzC,CAAA;AACA,IAAA,MAAMC,YAAY,GAAGC,6BAA6B,CAChDJ,WADgD,EAEhDR,YAFgD,CAAlD,CAAA;AAIA,IAAA,MAAMa,QAAQ,GAAG,MAAMhB,QAAQ,CAC5BS,GADoB,EAEpBQ,CAAAA,mBAFoB,CAEA,CAACN,WAAD,EAAcG,YAAd,CAFA,EAE6BV,UAF7B,CAAvB,CAAA;IAIA,MAAMc,WAAW,GAAGC,aAAa,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAjC,CAAA;IACA,MAAMI,YAAY,GAAGC,cAAc,CAACL,QAAQ,CAAC,CAAD,CAAT,CAAnC,CAAA;AACA,IAAA,MAAMM,SAAS,GAAGC,MAAM,CAACL,WAAD,CAAxB,CAAA;AAEA,IAAA,IAAIM,aAAa,GAAGC,UAAU,CAAClB,eAAD,CAA9B,CAAA;;AACA,IAAA,IAAIF,gBAAJ,EAAsB;AACpBmB,MAAAA,aAAa,GAAG,MAAMxB,QAAQ,CAC3B0B,IADmB,EAAA,CAEnBrB,gBAFmB,CAEFmB,aAFE,CAAA,CAGnBG,GAHmB,CAGf1B,KAHe,CAAtB,CAAA;AAID,KAAA;;AAED,IAAA,OAAO2B,mBAAmB,CAACR,YAAD,EAAeE,SAAf,EAA0BE,aAA1B,CAA1B,CAAA;AACD,GAAA;AAvCH;;;;"}