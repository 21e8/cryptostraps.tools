{"version":3,"file":"findTokenWithMetadataByMint.mjs","sources":["../../../../src/plugins/nftModule/findTokenWithMetadataByMint.ts"],"sourcesContent":["import type { Commitment, PublicKey } from '@solana/web3.js';\nimport { Metaplex } from '@/Metaplex';\nimport { Operation, useOperation, OperationHandler } from '@/types';\nimport { toMetadata, toTokenWithMetadata, TokenWithMetadata } from './Metadata';\nimport {\n  findAssociatedTokenAccountPda,\n  toMint,\n  toTokenWithMint,\n  TokenWithMint,\n  toMintAccount,\n  toTokenAccount,\n} from '../tokenModule';\nimport { findMetadataPda, parseMetadataAccount } from '@/programs';\nimport { DisposableScope } from '@/utils';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindTokenWithMetadataByMintOperation' as const;\nexport const findTokenWithMetadataByMintOperation =\n  useOperation<FindTokenWithMetadataByMintOperation>(Key);\nexport type FindTokenWithMetadataByMintOperation = Operation<\n  typeof Key,\n  FindTokenWithMetadataByMintInput,\n  TokenWithMetadata | TokenWithMint\n>;\n\nexport type FindTokenWithMetadataByMintInput = {\n  mintAddress: PublicKey;\n  ownerAddress: PublicKey;\n  commitment?: Commitment;\n  loadJsonMetadata?: boolean; // Default: true\n};\n\n// -----------------\n// Handler\n// -----------------\n\nexport const findTokenWithMetadataByMintOperationHandler: OperationHandler<FindTokenWithMetadataByMintOperation> =\n  {\n    handle: async (\n      operation: FindTokenWithMetadataByMintOperation,\n      metaplex: Metaplex,\n      scope: DisposableScope\n    ): Promise<TokenWithMetadata | TokenWithMint> => {\n      const {\n        mintAddress,\n        ownerAddress,\n        commitment,\n        loadJsonMetadata = true,\n      } = operation.input;\n\n      const metadataAddress = findMetadataPda(mintAddress);\n      const tokenAddress = findAssociatedTokenAccountPda(\n        mintAddress,\n        ownerAddress\n      );\n      const accounts = await metaplex\n        .rpc()\n        .getMultipleAccounts(\n          [mintAddress, metadataAddress, tokenAddress],\n          commitment\n        );\n\n      const mintAccount = toMintAccount(accounts[0]);\n      const metadataAccount = parseMetadataAccount(accounts[1]);\n      const tokenAccount = toTokenAccount(accounts[2]);\n      const mintModel = toMint(mintAccount);\n\n      if (!metadataAccount.exists) {\n        return toTokenWithMint(tokenAccount, mintModel);\n      }\n\n      let metadataModel = toMetadata(metadataAccount);\n      if (loadJsonMetadata) {\n        metadataModel = await metaplex\n          .nfts()\n          .loadJsonMetadata(metadataModel)\n          .run(scope);\n      }\n\n      return toTokenWithMetadata(tokenAccount, mintModel, metadataModel);\n    },\n  };\n"],"names":["Key","findTokenWithMetadataByMintOperation","useOperation","findTokenWithMetadataByMintOperationHandler","handle","operation","metaplex","scope","mintAddress","ownerAddress","commitment","loadJsonMetadata","input","metadataAddress","findMetadataPda","tokenAddress","findAssociatedTokenAccountPda","accounts","rpc","getMultipleAccounts","mintAccount","toMintAccount","metadataAccount","parseMetadataAccount","tokenAccount","toTokenAccount","mintModel","toMint","exists","toTokenWithMint","metadataModel","toMetadata","nfts","run","toTokenWithMetadata"],"mappings":";;;;;;;;;AAeA;AACA;AACA;AAEA,MAAMA,GAAG,GAAG,sCAAZ,CAAA;MACaC,oCAAoC,GAC/CC,YAAY,CAAuCF,GAAvC,EADP;AAeP;AACA;AACA;AAEO,MAAMG,2CAAmG,GAC9G;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIyC;IAC/C,MAAM;MACJC,WADI;MAEJC,YAFI;MAGJC,UAHI;AAIJC,MAAAA,gBAAgB,GAAG,IAAA;KACjBN,GAAAA,SAAS,CAACO,KALd,CAAA;AAOA,IAAA,MAAMC,eAAe,GAAGC,eAAe,CAACN,WAAD,CAAvC,CAAA;AACA,IAAA,MAAMO,YAAY,GAAGC,6BAA6B,CAChDR,WADgD,EAEhDC,YAFgD,CAAlD,CAAA;AAIA,IAAA,MAAMQ,QAAQ,GAAG,MAAMX,QAAQ,CAC5BY,GADoB,GAEpBC,mBAFoB,CAGnB,CAACX,WAAD,EAAcK,eAAd,EAA+BE,YAA/B,CAHmB,EAInBL,UAJmB,CAAvB,CAAA;IAOA,MAAMU,WAAW,GAAGC,aAAa,CAACJ,QAAQ,CAAC,CAAD,CAAT,CAAjC,CAAA;IACA,MAAMK,eAAe,GAAGC,oBAAoB,CAACN,QAAQ,CAAC,CAAD,CAAT,CAA5C,CAAA;IACA,MAAMO,YAAY,GAAGC,cAAc,CAACR,QAAQ,CAAC,CAAD,CAAT,CAAnC,CAAA;AACA,IAAA,MAAMS,SAAS,GAAGC,MAAM,CAACP,WAAD,CAAxB,CAAA;;AAEA,IAAA,IAAI,CAACE,eAAe,CAACM,MAArB,EAA6B;AAC3B,MAAA,OAAOC,eAAe,CAACL,YAAD,EAAeE,SAAf,CAAtB,CAAA;AACD,KAAA;;AAED,IAAA,IAAII,aAAa,GAAGC,UAAU,CAACT,eAAD,CAA9B,CAAA;;AACA,IAAA,IAAIX,gBAAJ,EAAsB;AACpBmB,MAAAA,aAAa,GAAG,MAAMxB,QAAQ,CAC3B0B,IADmB,EAAA,CAEnBrB,gBAFmB,CAEFmB,aAFE,CAAA,CAGnBG,GAHmB,CAGf1B,KAHe,CAAtB,CAAA;AAID,KAAA;;AAED,IAAA,OAAO2B,mBAAmB,CAACV,YAAD,EAAeE,SAAf,EAA0BI,aAA1B,CAA1B,CAAA;AACD,GAAA;AA3CH;;;;"}