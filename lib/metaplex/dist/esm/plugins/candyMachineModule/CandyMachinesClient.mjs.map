{"version":3,"file":"CandyMachinesClient.mjs","sources":["../../../../src/plugins/candyMachineModule/CandyMachinesClient.ts"],"sourcesContent":["import type { PublicKey } from '@solana/web3.js';\nimport type { Metaplex } from '@/Metaplex';\nimport {\n  CreateCandyMachineInput,\n  CreateCandyMachineInputWithoutConfigs,\n  createCandyMachineOperation,\n  CreateCandyMachineOutput,\n} from './createCandyMachine';\nimport { Task } from '@/utils';\nimport { CandyMachine } from './CandyMachine';\nimport {\n  CandyMachineJsonConfigs,\n  toCandyMachineConfigsFromJson,\n} from './CandyMachineJsonConfigs';\nimport {\n  findCandyMachineByAddressOperation,\n  FindCandyMachineByAddressInput,\n} from './findCandyMachineByAddress';\nimport {\n  FindCandyMachinesByPublicKeyFieldInput,\n  findCandyMachinesByPublicKeyFieldOperation,\n} from './findCandyMachinesByPublicKeyField';\nimport {\n  UpdateCandyMachineInput,\n  UpdateCandyMachineInputWithoutConfigs,\n  updateCandyMachineOperation,\n  UpdateCandyMachineOutput,\n} from './updateCandyMachine';\nimport {\n  InsertItemsToCandyMachineInput,\n  insertItemsToCandyMachineOperation,\n  InsertItemsToCandyMachineOutput,\n} from './insertItemsToCandyMachine';\nimport { CandyMachinesBuildersClient } from './CandyMachinesBuildersClient';\n\nexport class CandyMachinesClient {\n  constructor(readonly metaplex: Metaplex) {}\n\n  builders() {\n    return new CandyMachinesBuildersClient(this.metaplex);\n  }\n\n  create(\n    input: CreateCandyMachineInput\n  ): Task<CreateCandyMachineOutput & { candyMachine: CandyMachine }> {\n    return new Task(async (scope) => {\n      const operation = createCandyMachineOperation(input);\n      const output = await this.metaplex.operations().execute(operation, scope);\n      scope.throwIfCanceled();\n      const candyMachine = await this.findByAddress(\n        output.candyMachineSigner.publicKey\n      ).run(scope);\n      return { ...output, candyMachine };\n    });\n  }\n\n  createFromJsonConfig(\n    input: CreateCandyMachineInputWithoutConfigs & {\n      json: CandyMachineJsonConfigs;\n    }\n  ) {\n    const { json, ...otherInputs } = input;\n    const configs = toCandyMachineConfigsFromJson(json);\n    return this.create({ ...otherInputs, ...configs });\n  }\n\n  findAllByWallet(\n    wallet: PublicKey,\n    options?: Omit<FindCandyMachinesByPublicKeyFieldInput, 'type' | 'publicKey'>\n  ): Task<CandyMachine[]> {\n    return this.metaplex.operations().getTask(\n      findCandyMachinesByPublicKeyFieldOperation({\n        type: 'wallet',\n        publicKey: wallet,\n        ...options,\n      })\n    );\n  }\n\n  findAllByAuthority(\n    authority: PublicKey,\n    options?: Omit<FindCandyMachinesByPublicKeyFieldInput, 'type' | 'publicKey'>\n  ): Task<CandyMachine[]> {\n    return this.metaplex.operations().getTask(\n      findCandyMachinesByPublicKeyFieldOperation({\n        type: 'authority',\n        publicKey: authority,\n        ...options,\n      })\n    );\n  }\n\n  findByAddress(\n    address: PublicKey,\n    options?: Omit<FindCandyMachineByAddressInput, 'type' | 'publicKey'>\n  ): Task<CandyMachine> {\n    return this.metaplex\n      .operations()\n      .getTask(findCandyMachineByAddressOperation({ address, ...options }));\n  }\n\n  insertItems(\n    candyMachine: CandyMachine,\n    input: Omit<InsertItemsToCandyMachineInput, 'candyMachine'>\n  ): Task<InsertItemsToCandyMachineOutput & { candyMachine: CandyMachine }> {\n    return new Task(async (scope) => {\n      const operation = insertItemsToCandyMachineOperation({\n        candyMachine,\n        ...input,\n      });\n      const output = await this.metaplex.operations().execute(operation, scope);\n      scope.throwIfCanceled();\n      const updatedCandyMachine = await this.findByAddress(\n        candyMachine.address\n      ).run();\n      return { candyMachine: updatedCandyMachine, ...output };\n    });\n  }\n\n  update(\n    candyMachine: CandyMachine,\n    input: Omit<UpdateCandyMachineInput, 'candyMachine'>\n  ): Task<UpdateCandyMachineOutput & { candyMachine: CandyMachine }> {\n    return new Task(async (scope) => {\n      const output = await this.metaplex\n        .operations()\n        .execute(\n          updateCandyMachineOperation({ candyMachine, ...input }),\n          scope\n        );\n      scope.throwIfCanceled();\n      const updatedCandyMachine = await this.findByAddress(\n        candyMachine.address\n      ).run();\n      return { candyMachine: updatedCandyMachine, ...output };\n    });\n  }\n\n  updateFromJsonConfig(\n    candyMachine: CandyMachine,\n    input: Omit<UpdateCandyMachineInputWithoutConfigs, 'candyMachine'> & {\n      json: CandyMachineJsonConfigs;\n    }\n  ) {\n    const { json, ...otherInputs } = input;\n    const configs = toCandyMachineConfigsFromJson(json);\n    return this.update(candyMachine, { ...otherInputs, ...configs });\n  }\n}\n"],"names":["CandyMachinesClient","constructor","metaplex","builders","CandyMachinesBuildersClient","create","input","Task","scope","operation","createCandyMachineOperation","output","operations","execute","throwIfCanceled","candyMachine","findByAddress","candyMachineSigner","publicKey","run","createFromJsonConfig","json","otherInputs","configs","toCandyMachineConfigsFromJson","findAllByWallet","wallet","options","getTask","findCandyMachinesByPublicKeyFieldOperation","type","findAllByAuthority","authority","address","findCandyMachineByAddressOperation","insertItems","insertItemsToCandyMachineOperation","updatedCandyMachine","update","updateCandyMachineOperation","updateFromJsonConfig"],"mappings":"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"}